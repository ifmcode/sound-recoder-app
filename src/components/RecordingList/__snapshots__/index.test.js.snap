// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing RecordingList component when store status is success with recordings should render the RecordingList component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        id="recording-list-container"
      >
        <ul
          id="recording-list-wrapper"
        >
          <li
            class="recording-list-item selected-recording"
          >
            <div
              class="icon indicator-icon"
            >
              <svg>
                indicator.svg
              </svg>
            </div>
            2022-01-26 14:24:0392
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0363
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0313
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0353
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0382
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0356
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0366
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0394
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0389
          </li>
          <li
            class="recording-list-item"
          >
            2022-01-26 14:24:0342
          </li>
        </ul>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      id="recording-list-container"
    >
      <ul
        id="recording-list-wrapper"
      >
        <li
          class="recording-list-item selected-recording"
        >
          <div
            class="icon indicator-icon"
          >
            <svg>
              indicator.svg
            </svg>
          </div>
          2022-01-26 14:24:0392
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0363
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0313
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0353
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0382
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0356
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0366
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0394
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0389
        </li>
        <li
          class="recording-list-item"
        >
          2022-01-26 14:24:0342
        </li>
      </ul>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing RecordingList component when store status is success without recordings should render the RecordingList component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        id="recording-list-container"
      >
        <p
          class="default-phrase-recording-list"
        >
          - There are not recordings -
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      id="recording-list-container"
    >
      <p
        class="default-phrase-recording-list"
      >
        - There are not recordings -
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing RecordingList component when store status is zero should render the RecordingList component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        id="recording-list-container"
      >
        <p
          class="default-phrase-recording-list"
        >
          - Loading recordings -
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      id="recording-list-container"
    >
      <p
        class="default-phrase-recording-list"
      >
        - Loading recordings -
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing RecordingList component with failed store status should render the RecordingList component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        id="recording-list-container"
      >
        <p
          class="default-phrase-recording-list"
        >
          - An error retrieving data has ocurred -
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      id="recording-list-container"
    >
      <p
        class="default-phrase-recording-list"
      >
        - An error retrieving data has ocurred -
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
